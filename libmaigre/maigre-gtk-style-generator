#!/usr/bin/env python

last_word = None
vmethod = None
arg_type = None
methods = []

out = open ('maigre-style-overrides.c', 'w')

for word in open ('/usr/include/gtk-2.0/gtk/gtkstyle.h').read ().split ():
    if not last_word:
        last_word = word
        continue

    if last_word == 'void' and word.startswith ('(*draw_'):
        vmethod = word.strip ('(*)')
        methods.append ([vmethod])
    elif vmethod:
        end = word.endswith (');')
        word = word.strip ('();,')
        if word == 'const':
            arg_type = word
            continue
        if not arg_type:
            arg_type = word
        elif arg_type == 'const':
            arg_type = 'const %s' % word
        else:
            methods[-1].append ((arg_type, word.replace ('_', '')))
            arg_type = None
        if end:
            vmethod = None

    last_word = word

out.write ('''// This file was generated by the Maigre code generator.
// Any changes made will be lost if regenerated.

static struct MaigreMethodMap {
    const gchar *name;
    gint arg_count;
    MonoMethod *managed_method;
    gpointer *native_method;
} maigre_style_method_map [] = {
''')

for method in methods:
    managed_name = ''
    for part in method[0].split ('_'):
        managed_name += part.capitalize ()
    out.write ('    { "%s", %d, NULL, NULL },\n' % (managed_name, len (method[1:])))
out.write ('    { NULL, }\n')
out.write ('};\n\n')

method_index = 0
for method in methods:
    line_count = 0
    arg_index = 0
    arg_count = len (method[1:])
    args = method[1:]
    arg_names = []
    for arg in args:
        arg_names.append (arg[1])

    out.write ('static void\n')
    line = 'maigre_style_%s (' % method[0]
    for arg in method[1:]:
        line += '%s %s' % (arg[0], arg[1])
        if arg_index < arg_count - 1:
            line += ', '
        else:
            line += ')'
        arg_index += 1
        if len (line) > 55:
            line_count += 1
            out.write (line + '\n')
            line = '    '
    if len (line.strip ()) > 0:
        out.write (line + '\n')
    out.write ('''{
    MaigreMonoBridge *bridge;
    MonoMethod *managed_method;
    gpointer args[1];

''')

    if 'shadowtype' not in arg_names:
        out.write ('    GtkShadowType shadowtype = GTK_SHADOW_NONE;\n')
    if 'x' not in arg_names:
        out.write ('    gint x = 0;\n')
    if 'y' not in arg_names:
        out.write ('    gint y = 0;\n')
    if 'width' not in arg_names:
        out.write ('    gint width = 0;\n')
    if 'height' not in arg_names:
        out.write ('    gint height = 0;\n')
    if 'orientation' not in arg_names:
        out.write ('    GtkOrientation orientation = GTK_ORIENTATION_HORIZONTAL;\n')
    if 'expander_style' not in arg_names:
        out.write ('    GtkExpanderStyle expander_style = GTK_EXPANDER_COLLAPSED;\n')
    if '*layout' not in arg_names:
        out.write ('    PangoLayout *layout = NULL;\n')
    if 'use_text' not in arg_names:
        out.write ('    gboolean use_text = FALSE;\n')
    if 'edge' not in arg_names:
        out.write ('    GdkWindowEdge edge = GDK_WINDOW_EDGE_NORTH_WEST;\n')
    if 'step' not in arg_names:
        out.write ('    gint step = 0;\n')
    if 'x1' not in arg_names:
        out.write ('    gint x1 = 0;\n')
    if 'x2' not in arg_names:
        out.write ('    gint x2 = 0;\n')
    if 'y1' not in arg_names:
        out.write ('    gint y1 = 0;\n')
    if 'y2' not in arg_names:
        out.write ('    gint y2 = 0;\n')
    if 'fill' not in arg_names:
        out.write ('    gboolean fill = FALSE;\n')
    if 'arrow_type' not in arg_names:
        out.write ('    GtkArrowType arrow_type = GTK_ARROW_UP;\n')

    out.write ('''
    bridge = maigre_mono_bridge ();

    if (!bridge->assemblies_loaded ||
        (managed_method = maigre_style_method_map[%d].managed_method) == NULL) {
        return;
    }
''' % method_index)

    method_index += 1
    out.write ('''
    args[0] = maigre_draw_context_new (bridge, "%s",
        style, window, statetype, shadowtype, area,
        widget, detail, x, y, width, height, orientation,
        expander_style, layout, use_text, edge, step,
        x1, x2, y1, y2, fill, arrow_type);

    mono_runtime_invoke (managed_method, NULL, args, NULL);
}

''' % method[0])

out.write ('''
static void
maigre_style_init_method_map ()
{
''')
method_index = 0
for method in methods:
    out.write ('    maigre_style_method_map[%d].native_method = (gpointer)maigre_style_%s;\n' % (method_index, method[0]))
    method_index += 1
out.write ('}')
