#!/usr/bin/env python

last_word = None
vmethod = None
arg_type = None
methods = []

out = open ('maigre-style-overrides.c', 'w')

for word in open ('/usr/include/gtk-2.0/gtk/gtkstyle.h').read ().split ():
    if not last_word:
        last_word = word
        continue

    if last_word == 'void' and word.startswith ('(*draw_'):
        vmethod = word.strip ('(*)')
        methods.append ([vmethod])
    elif vmethod:
        end = word.endswith (');')
        word = word.strip ('();,')
        if word == 'const':
            arg_type = word
            continue
        if not arg_type:
            arg_type = word
        elif arg_type == 'const':
            arg_type = 'const %s' % word
        else:
            methods[-1].append ((arg_type, word))
            arg_type = None
        if end:
            vmethod = None

    last_word = word

out.write ('''// This file was generated by the Maigre code generator.
// Any changes made will be lost if regenerated.

static struct MaigreMethodMap {
    const gchar *name;
    gint arg_count;
    MonoMethod *managed_method;
    gpointer *native_method;
} maigre_style_method_map [] = {
''')

for method in methods:
    managed_name = ''
    for part in method[0].split ('_'):
        managed_name += part.capitalize ()
    out.write ('    { "%s", %d, NULL, NULL },\n' % (managed_name, len (method[1:])))
out.write ('    { NULL, }\n')
out.write ('};\n\n')

method_index = 0
for method in methods:
    line_count = 0
    arg_index = 0
    arg_count = len (method[1:])
    out.write ('static void\n')
    line = 'maigre_style_%s (' % method[0]
    for arg in method[1:]:
        line += '%s %s' % (arg[0], arg[1])
        if arg_index < arg_count - 1:
            line += ', '
        else:
            line += ')'
        arg_index += 1
        if len (line) > 55:
            line_count += 1
            out.write (line + '\n')
            line = '    '
    if len (line.strip ()) > 0:
        out.write (line + '\n')
    out.write ('''{
    MaigreMonoBridge *bridge;
    MonoMethod *managed_method;

    bridge = maigre_mono_bridge ();

    if (!bridge->assemblies_loaded ||
        (managed_method = maigre_style_method_map[%d].managed_method) == NULL) {
        return;
    }

    {
        gpointer args[%d] = {
''' \
        % (method_index, len (method[1:])))
    arg_index = 0
    for arg in method[1:]:
        assign = ''
        if arg[1][0] == '*':
            if arg[0] == 'GdkRectangle':    
                assign = 'maigre_gdk_rectangle_new (bridge, %s)' % arg[1][1:]
            elif arg[0] == 'const gchar':
                assign = 'mono_string_new (bridge->domain, %s)' % arg[1][1:]
            else:
                assign = 'maigre_gobject_new (bridge, %s)' % arg[1][1:]
        else:
            assign = '&%s' % arg[1]
        if arg_index < arg_count - 1:
            out.write ('            %s,\n' % assign)
        else:
            out.write ('            %s\n' % assign)
        arg_index += 1
    method_index += 1
    out.write ('''        };

        mono_runtime_invoke (managed_method, NULL, args, NULL);
    }
}

''')

out.write ('''
static void
maigre_style_init_method_map ()
{
''')
method_index = 0
for method in methods:
    out.write ('    maigre_style_method_map[%d].native_method = (gpointer)maigre_style_%s;\n' % (method_index, method[0]))
    method_index += 1
out.write ('}')
